// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=DaRl, b=DbRl, c=DcRl, d=DdRl);
    RAM4K(in=in, load=DaRl, address=address[0..11], out=RoMa);
    RAM4K(in=in, load=DbRl, address=address[0..11], out=RoMb);
    RAM4K(in=in, load=DcRl, address=address[0..11], out=RoMc);
    RAM4K(in=in, load=DdRl, address=address[0..11], out=RoMd);
    Mux4Way16(a=RoMa, b=RoMb, c=RoMc, d=RoMd, sel=address[12..13], out=out);
}