// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load, sel=address[6..8], a=DaRl, b=DbRl, c=DcRl,
        d=DdRl,  e=DeRl,            f=DfRl, g=DgRl, h=DhRl);
    RAM64(in=in, load=DaRl, address=address[0..5], out=RoMa);
    RAM64(in=in, load=DbRl, address=address[0..5], out=RoMb);
    RAM64(in=in, load=DcRl, address=address[0..5], out=RoMc);
    RAM64(in=in, load=DdRl, address=address[0..5], out=RoMd);
    RAM64(in=in, load=DeRl, address=address[0..5], out=RoMe);
    RAM64(in=in, load=DfRl, address=address[0..5], out=RoMf);
    RAM64(in=in, load=DgRl, address=address[0..5], out=RoMg);
    RAM64(in=in, load=DhRl, address=address[0..5], out=RoMh);
    Mux8Way16(
        a=RoMa, b=RoMb, c=RoMc, d=RoMd,            e=RoMe,
        f=RoMf, g=RoMg, h=RoMh, sel=address[6..8], out=out);
}