// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load, sel=address, a=DaRl, b=DbRl, c=DcRl,
        d=DdRl,  e=DeRl,      f=DfRl, g=DgRl, h=DhRl);
    Register(in=in, load=DaRl, out=RoMa);
    Register(in=in, load=DbRl, out=RoMb);
    Register(in=in, load=DcRl, out=RoMc);
    Register(in=in, load=DdRl, out=RoMd);
    Register(in=in, load=DeRl, out=RoMe);
    Register(in=in, load=DfRl, out=RoMf);
    Register(in=in, load=DgRl, out=RoMg);
    Register(in=in, load=DhRl, out=RoMh);
    Mux8Way16(
        a=RoMa, b=RoMb, c=RoMc, d=RoMd,      e=RoMe,
        f=RoMf, g=RoMg, h=RoMh, sel=address, out=out);
}